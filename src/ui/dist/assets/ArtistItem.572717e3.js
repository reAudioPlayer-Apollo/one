import{F as A,T as b,a as S,c as k}from"./song.9b7af389.js";import{T,P as B}from"./TrackInfo.6105a911.js";import{m as C,j as P,n as u,o as f,f as N,w as j,g as d,u as F,G as O,a as c,_ as D,e as E,c as p,t as g,d as x}from"./index.bf98638a.js";const L=c("br",null,null,-1),M=C({__name:"ImportSpotifyArtist",props:{artist:{type:Object,required:!0}},setup(i,{expose:s}){const e=i,m=P(),l=u([{name:"playlist",type:"dropdown",required:!0,value:null,options:m.playlistsAsDropdown}]),n=u(null),r=u(null),a=u([]),h=async()=>{if(n.value.load(),a.value.length==0){const o=await fetch(`/api/spotify/artists/${e.artist.id}`);a.value=await o.json()}n.value.show()},w=async o=>{if(o==="new"){const t=await k(e.artist.name,"",e.artist.image);return l.value[0].options=m.playlistsAsDropdown,l.value[0].value=t,t}return Number(o)},_=async(o,t=null)=>{a.value[o].added||(t!=null||(t=r.value.toObject().playlist),t=await w(t),await S(t!=null?t:r.value.toObject().playlist,a.value[o]),a.value[o].added=!0)},y=async()=>{let o=r.value.toObject().playlist;o=await w(o),a.value.forEach((t,v)=>{_(v,o)})};return s({show:h}),(o,t)=>(f(),N(b,{ref_key:"modal",ref:n,name:"Import Artist",submitName:"Add All",onSubmit:y,onClose:t[0]||(t[0]=v=>o.$emit("close"))},{default:j(()=>[d(T,{title:i.artist.name,cover:i.artist.image,icons:[{name:"share",onClick:()=>F(O)(i.artist.href)}]},null,8,["title","cover","icons"]),d(A,{ref_key:"form",ref:r,options:l.value},null,8,["options"]),L,d(B,{songs:a.value,onAdd:_},null,8,["songs"])]),_:1},512))}});const V={components:{AddArtistToPlaylist:M},name:"ArtistItem",methods:{redirect(){this.$refs.import.show()},follow(i){i.stopPropagation();const s=this.following?"DELETE":"POST";fetch("/api/spotify/following",{method:s,body:JSON.stringify({artistId:this.id})}).then(e=>{e.status==200&&(this.following=!this.following)})}},data(){return{following:!1}},props:{cover:String,name:String,description:String,id:String,showFollowButton:Boolean}},q={class:"wrapper drop-shadow-md"},H=["src"],G=["innerHTML"];function J(i,s,e,m,l,n){const r=E("add-artist-to-playlist");return f(),p("div",q,[d(r,{artist:{id:e.id,name:e.name,href:`https://open.spotify.com/artist/${e.id}`,image:e.cover},ref:"import"},null,8,["artist"]),c("div",{class:"item",onClick:s[1]||(s[1]=(...a)=>n.redirect&&n.redirect(...a))},[c("img",{src:e.cover},null,8,H),c("h4",null,g(e.name),1),c("p",{innerHTML:e.description},null,8,G),e.showFollowButton?(f(),p("button",{key:0,onClick:s[0]||(s[0]=(...a)=>n.follow&&n.follow(...a)),class:"followButton"},g(l.following?"Following":"Follow"),1)):x("",!0)])])}const Q=D(V,[["render",J],["__scopeId","data-v-fb0ace7e"]]);export{Q as A};
