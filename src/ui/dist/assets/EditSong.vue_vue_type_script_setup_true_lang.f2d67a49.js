import{i as b,A as S,e as f,v as $,x as B,o as m,c as g,r as D,g as s,w as i,b as d,t as _,f as h,d as F,F as P,h as A,u as E,B as N,C as y}from"./index.aa38e9d2.js";import{F as q,T as O,u as T}from"./song.91ac9cb9.js";const j={ref:"box"},R={name:"SongCtx",props:{liked:Boolean,isAutoPlaylist:Boolean,src:String,artist:String,title:String},methods:{preview(){const t=new CustomEvent("player.play",{detail:{title:this.title,artist:this.artist,source:this.src}});window.dispatchEvent(t),this.$refs.contextmenu.hide()},hide(){this.$refs.contextmenu.hide()},show(t){const n=this.$refs.box.getBoundingClientRect(),o={top:n.height+n.top+window.scrollY,left:n.width+n.left+window.scrollX};this.$refs.contextmenu.show(o),t==null||t.stopPropagation()},like(){this.$emit("like")},remove(){this.$emit("remove")},addto(t){if(t==="new"){fetch("/api/playlists/new").then(n=>n.text()).then(n=>{this.$emit("addto",Number(n.replace("/playlist/","")))});return}this.$emit("addto",t)},download(){this.$emit("download")},update(){this.$emit("update")}}},z=Object.assign(R,{setup(t){const n=b(),o=S(()=>n.playlists);return(a,p)=>{const r=f("v-contextmenu-item"),c=f("v-contextmenu-divider"),v=f("v-contextmenu-submenu"),w=f("v-contextmenu"),l=$("contextmenu");return B((m(),g("div",j,[D(a.$slots,"default"),s(w,{ref:"contextmenu"},{default:i(()=>[s(r,{onClick:a.preview},{default:i(()=>[d("Preview")]),_:1},8,["onClick"]),s(c),s(r,{onClick:a.like},{default:i(()=>[d(_((t.liked?"Remove from":"Save to")+" your Liked Songs"),1)]),_:1},8,["onClick"]),t.isAutoPlaylist?F("",!0):(m(),h(r,{key:0,onClick:a.remove},{default:i(()=>[d("Remove from this playlist")]),_:1},8,["onClick"])),s(v,{title:"Add to playlist"},{default:i(()=>[s(r,{onClick:p[0]||(p[0]=()=>a.addto("new"))},{default:i(()=>[d("Add to new playlist")]),_:1}),s(c),(m(!0),g(P,null,A(E(o),(e,u)=>(m(),h(r,{key:u,onClick:()=>a.addto(u)},{default:i(()=>[d(_(e.name),1)]),_:2},1032,["onClick"]))),128))]),_:1}),s(c),s(r,{onClick:a.update},{default:i(()=>[d("Update Metadata")]),_:1},8,["onClick"]),s(c),s(r,{onClick:a.download},{default:i(()=>[d("Download")]),_:1},8,["onClick"])]),_:1},512)])),[[l,void 0,"contextmenu"]])}}}),M=N({__name:"EditSong",props:{song:{type:Object,required:!0}},setup(t,{expose:n}){const o=t,a=async(l,e)=>{const u=new FormData,k="."+e.name.split(".").pop();var C=e.slice(0,e.size,e.type),x=new File([C],o.song.id+k,{type:e.type});return u.append("file",x),await(await fetch(l,{method:"POST",body:u})).text()},p=[{name:"src",type:"upload",accept:"audio/mp3",required:!0,onUpload:l=>{a("/api/config/tracks",l).then(e=>o.song.src=e)},value:o.song.src},{name:"title",type:"text",required:!0,value:o.song.title},{name:"artist",type:"text",required:!0,value:o.song.artist},{name:"album",type:"text",value:o.song.album},{name:"cover",type:"upload",accept:"image/*",imagePreview:!0,value:o.song.cover,onUpload:l=>{a("/api/config/images",l).then(e=>o.song.cover=e)}}],r=async()=>{await T({...o.song,...v.value.toObject()})},c=y(null),v=y(null);return n({show:()=>{c.value.show()}}),(l,e)=>(m(),h(O,{ref_key:"modal",ref:c,name:"Edit Song",submitName:"Save",onSubmit:r,onClose:e[0]||(e[0]=u=>l.$emit("close"))},{default:i(()=>[s(q,{ref_key:"form",ref:v,options:p},null,512)]),_:1},512))}});export{z as _,M as a};
