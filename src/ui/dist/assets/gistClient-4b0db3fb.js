import{bY as g,bK as r}from"./index-8780d14b.js";const e=async(t=null)=>{const s=await g(),a=t??s.github.githubPat;if(!a)throw new Error("No GitHub PAT found");return{Authorization:"Bearer "+a}},h=(t,s="one.lib.json")=>{const a={};return a[s]={content:JSON.stringify(t)},JSON.stringify({files:a})},c=async()=>(await g()).github.gistId,o=async()=>{const t=await e(),s=await fetch(`https://api.github.com/gists/${await c()}`,{headers:t});try{return await s.json()}catch{return null}},d=async(t,s="one.lib.json")=>{const a=await e(),n=await fetch(`https://api.github.com/gists/${await c()}`,{method:"PATCH",headers:a,body:h(t,s)});if(!n.ok)return r.addError("Failed to update gist","",3e3),null;const i=await n.json();return r.addSuccess("Gist updated","",3e3),i},u=async(t,s="one.lib.json")=>{const a=await e(),n=await fetch("https://api.github.com/gists",{method:"POST",headers:a,body:h(t,s)});if(!n.ok)return r.addError("Failed to create gist","",3e3),null;const i=await n.json();i.id&&await fetch("/api/config",{method:"PUT",body:JSON.stringify({github:{gistId:i.id}})}),r.addSuccess("Gist created","",3e3)},l={connected:async()=>!!await c(),get:o,getContent:async(t="one.lib.json")=>{var n,i;const a=(i=(n=(await o()).files)==null?void 0:n[t])==null?void 0:i.content;return a?JSON.parse(a):[]},saveOrUpdate:async(t,s="one.lib.json")=>(await o()).files?await d(t,s):await u(t,s),save:u,update:d,delete:async()=>{const t=await e();return await(await fetch(`https://api.github.com/gists/${await c()}`,{method:"DELETE",headers:t})).json()},search:async(t=null)=>{var i;const s=await e(t),n=await(await fetch("https://api.github.com/gists?filename=one.lib.json",{headers:s})).json();return(i=n==null?void 0:n[0])==null?void 0:i.id},gistUrl:async()=>{const t=await o();return t==null?void 0:t.html_url}};export{l as G};
