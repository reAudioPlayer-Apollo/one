import{h as _,p as w,_ as b,e as v,o as d,c as u,a as o,g as P,t as n,b as g,F as T,d as y,bU as m}from"./index-d1ada720.js";import{a as x}from"./song-1a7db152.js";const C={name:"cloudPlaylist",components:{Cover:_},props:{playlist:Object,localPlaylists:Array,cloudPlaylists:Array},data(){return{statusText:"",toAdd:[]}},methods:{parseCover:w,async import(){if(this.statusIcon!="cloud_done"){if(this.statusIcon=="cloud_sync"){for(let t=0;t<this.toAdd.length;t++){const s=this.toAdd[t];this.statusText=`adding song ${t} / ${this.toAdd.length-1}...`,await x(this.localPlaylist.id,s)}this.statusText="";return}if(this.statusIcon=="cloud"){this.statusText="creating playlist...";const t=await fetch("/api/playlists/new");this.statusText="updating playlist...";const s=Number(await t.text());await fetch(`/api/playlists/${s}`,{method:"POST",body:JSON.stringify({name:this.playlist.name,description:this.playlist.description})});for(let i=0;i<this.playlist.songs.length;i++){const e=this.playlist.songs[i];this.statusText=`adding song ${i} / ${this.playlist.songs.length-1}...`,await fetch(`/api/playlists/${s}/tracks`,{method:"POST",body:JSON.stringify({source:e.source,title:e.title,artist:e.artist,album:e.album,cover:e.cover,favourite:e.favourite,duration:e.duration})})}this.statusText=""}}},songEquals(t,s){return!t||!s?!1:t.source==s.source&&t.title==s.title&&t.artist==s.artist&&t.album==s.album&&t.cover==s.cover}},computed:{cover(){var t,s;return this.playlist.cover||((s=(t=this.playlist.songs)==null?void 0:t[0])==null?void 0:s.cover)||"/assets/img/music_placeholder.png"},localPlaylist(){for(let t=0;t<this.localPlaylists.length;t++){const s=this.localPlaylists[t];if(s.name==this.playlist.name)return{...s,id:t}}},statusIcon(){var i,e;if(this.statusText)return"cloud_sync";const s=(i=(this.localPlaylists||this.cloudPlaylists).filter(a=>a.name==this.playlist.name))==null?void 0:i[0];if(!s)return this.localPlaylists?"cloud":"cloud_off";if(this.playlist.description!=s.description)return"cloud_sync";this.toAdd=[];for(let a=0;a<this.playlist.songs.length;a++){const l=this.playlist.songs[a],r=(e=s.songs)==null?void 0:e[a];this.songEquals(l,r)||this.toAdd.push(l)}return this.toAdd.length?"cloud_sync":"cloud_done"}}};const A={class:"cloudPlaylist"},N={class:"data"},S={class:"lead"},j={class:"status"},O={class:"material-symbols-rounded"},I={key:0,class:"lead"};function k(t,s,i,e,a,l){const r=v("Cover");return d(),u("div",A,[o("span",{class:"close material-symbols-rounded",onClick:s[0]||(s[0]=()=>t.$emit("remove"))},"close"),P(r,{src:l.cover},null,8,["src"]),o("div",N,[o("h2",null,n(i.playlist.name),1),o("div",S,[g(n(i.playlist.songs.length)+" "+n(i.playlist.songs.length==1?"song":"songs"),1),i.playlist.description?(d(),u(T,{key:0},[g(" â€¢ "),o("i",null,n(i.playlist.description),1)],64)):y("",!0)]),o("div",j,[o("span",O,n(l.statusIcon),1),a.statusText?(d(),u("div",I,[o("i",null,n(a.statusText),1)])):y("",!0)])])])}const $=b(C,[["render",k],["__scopeId","data-v-e8a248b5"]]),c=async()=>{const s=(await m()).github.githubPat;if(!s)throw new Error("No GitHub PAT found");return{Authorization:"Bearer "+s}},p=(t,s="one.lib.json")=>{const i={};return i[s]={content:JSON.stringify(t)},JSON.stringify({files:i})},h=async()=>(await m()).github.gistId,f=async()=>{const t=await c();return await(await fetch(`https://api.github.com/gists/${await h()}`,{headers:t})).json()},B={get:f,getContent:async(t="one.lib.json")=>{const s=await f();return JSON.parse(s.files[t].content)},update:async(t,s="one.lib.json")=>{const i=await c();return await(await fetch(`https://api.github.com/gists/${await h()}`,{method:"PATCH",headers:i,body:p(t,s)})).json()},save:async(t,s="one.lib.json")=>{const i=await c(),a=await(await fetch("https://api.github.com/gists",{method:"POST",headers:i,body:p(t,s)})).json();a.id&&await fetch("/api/config",{method:"PUT",body:JSON.stringify({github:{gistId:a.id}})})},delete:async()=>{const t=await c();return await(await fetch(`https://api.github.com/gists/${await h()}`,{method:"DELETE",headers:t})).json()}};export{$ as C,B as G};
