import{bY as u,bK as e}from"./index-a21b7814.js";const c=async()=>{const s=(await u()).github.githubPat;if(!s)throw new Error("No GitHub PAT found");return{Authorization:"Bearer "+s}},h=(t,s="one.lib.json")=>{const a={};return a[s]={content:JSON.stringify(t)},JSON.stringify({files:a})},o=async()=>(await u()).github.gistId,r=async()=>{const t=await c(),s=await fetch(`https://api.github.com/gists/${await o()}`,{headers:t});try{return await s.json()}catch{return null}},d=async(t,s="one.lib.json")=>{const a=await c(),i=await fetch(`https://api.github.com/gists/${await o()}`,{method:"PATCH",headers:a,body:h(t,s)});if(!i.ok)return e.addError("Failed to update gist","",3e3),null;const n=await i.json();return e.addSuccess("Gist updated","",3e3),n},g=async(t,s="one.lib.json")=>{const a=await c(),i=await fetch("https://api.github.com/gists",{method:"POST",headers:a,body:h(t,s)});if(!i.ok)return e.addError("Failed to create gist","",3e3),null;const n=await i.json();n.id&&await fetch("/api/config",{method:"PUT",body:JSON.stringify({github:{gistId:n.id}})}),e.addSuccess("Gist created","",3e3)},f={connected:async()=>!!await o(),get:r,getContent:async(t="one.lib.json")=>{var i,n;const a=(n=(i=(await r()).files)==null?void 0:i[t])==null?void 0:n.content;return a?JSON.parse(a):[]},saveOrUpdate:async(t,s="one.lib.json")=>(await r()).files?await d(t,s):await g(t,s),save:g,update:d,delete:async()=>{const t=await c();return await(await fetch(`https://api.github.com/gists/${await o()}`,{method:"DELETE",headers:t})).json()}};export{f as G};
