import{bO as o,c7 as r}from"./index-13e752eb.js";const d=async t=>{await fetch(`/api/tracks/${t.id}`,{method:"PUT",body:JSON.stringify({source:t.source,title:t.title,artist:t.artist,album:t.album,cover:t.cover})})},f=async(t,a,s)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({[a]:s})})},y=async t=>await(await fetch("/api/browse/track",{method:"POST",body:JSON.stringify({url:t})})).json(),u=async(t,a)=>{t==="new"&&(t=await o()),typeof t=="string"&&console.error("playlistId cannot be a string",t),await fetch(`/api/playlists/${t}/tracks`,{method:"POST",body:JSON.stringify({source:a.source,title:a.title,artist:a.artist,album:a.album,cover:a.cover})})},h=async(t,a=!0)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({favourite:a})})},w=async t=>{window.open(`/api/tracks/${t}/download`)},c=async t=>await(await fetch(`/api/tracks/${t}`)).json(),m=async t=>{const a=r(t);return await c(a)},S=async(t,a=!1,s=null)=>{const e={id:t};return a&&(e.forceFetch=!0),s&&(e.spotifyId=s),await(await fetch("/api/spotify/meta",{method:"POST",body:JSON.stringify(e)})).json()},p=async t=>await(await fetch(`/api/spotify/recommendations/${t}`)).json();export{u as a,S as b,p as c,w as d,h as e,y as f,m as g,d as h,f as u};
