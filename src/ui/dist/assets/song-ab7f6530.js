import{c2 as o,bP as r,c9 as c}from"./index-73e4032e.js";const i=o(),y=async t=>{await fetch(`/api/tracks/${t.id}`,{method:"PUT",body:JSON.stringify({source:t.source,title:t.title,artist:t.artist,album:t.album,cover:t.cover})})},u=async(t,a,e)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({[a]:e})})},h=async t=>await(await fetch("/api/browse/track",{method:"POST",body:JSON.stringify({url:t})})).json(),m=async(t,a)=>{t==="new"&&(t=await r()),typeof t=="string"&&console.error("playlistId cannot be a string",t),await fetch(`/api/playlists/${t}/tracks`,{method:"POST",body:JSON.stringify({source:a.source,title:a.title,artist:a.artist,album:a.album,cover:a.cover,spotify:a.metadata?JSON.stringify(a.metadata.spotify):""})})},w=async(t,a=!0)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({favourite:a})})},S=t=>{i.downloadFromDb(t)},n=async t=>await(await fetch(`/api/tracks/${t}`)).json(),b=async t=>{const a=c(t);return await n(a)},p=async(t,a=!1,e=null)=>{const s={id:t};return a&&(s.forceFetch=!0),e&&(s.spotifyId=e),await(await fetch("/api/spotify/meta",{method:"POST",body:JSON.stringify(s)})).json()},l=async t=>await(await fetch(`/api/spotify/recommendations/${t}`)).json();export{m as a,p as b,l as c,S as d,w as e,h as f,b as g,y as h,u};
