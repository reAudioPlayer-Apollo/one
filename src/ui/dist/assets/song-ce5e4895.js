import{bP as o,c7 as r}from"./index-9cceea94.js";const f=async t=>{await fetch(`/api/tracks/${t.id}`,{method:"PUT",body:JSON.stringify({source:t.source,title:t.title,artist:t.artist,album:t.album,cover:t.cover})})},y=async(t,a,e)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({[a]:e})})},d=async t=>await(await fetch("/api/browse/track",{method:"POST",body:JSON.stringify({url:t})})).json(),u=async(t,a)=>{t==="new"&&(t=await o()),typeof t=="string"&&console.error("playlistId cannot be a string",t),await fetch(`/api/playlists/${t}/tracks`,{method:"POST",body:JSON.stringify({source:a.source,title:a.title,artist:a.artist,album:a.album,cover:a.cover,spotify:a.metadata?JSON.stringify(a.metadata.spotify):""})})},h=async(t,a=!0)=>{await fetch(`/api/tracks/${t}`,{method:"PUT",body:JSON.stringify({favourite:a})})},w=async t=>{window.open(`/api/tracks/${t}/download`)},i=async t=>await(await fetch(`/api/tracks/${t}`)).json(),m=async t=>{const a=r(t);return await i(a)},p=async(t,a=!1,e=null)=>{const s={id:t};return a&&(s.forceFetch=!0),e&&(s.spotifyId=e),await(await fetch("/api/spotify/meta",{method:"POST",body:JSON.stringify(s)})).json()},S=async t=>await(await fetch(`/api/spotify/recommendations/${t}`)).json();export{u as a,p as b,S as c,w as d,h as e,d as f,m as g,f as h,y as u};
