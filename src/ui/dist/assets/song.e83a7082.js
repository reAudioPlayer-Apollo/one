import{j as U,x as q,m as k,q as p,o as n,f as w,w as j,a as d,t as m,L as M,c as r,r as E,n as F,d as y,F as h,y as b,e as B,k as V,l as N,_ as g,z as I,A as L,u as f,h as T,B as S,C as J,D as A,E as z,G,i as W}from"./index.dbea350e.js";const C=U(),H=async e=>{await fetch(`/api/playlists/${e.id}`,{method:"POST",body:JSON.stringify({name:e.name,description:e.description,cover:e.cover})}),await C.fetchPlaylists()},we=async e=>{const s=await fetch(`/api/playlists/${e}`);if(s.status===404)return null;const o=await s.json();for(const c of o.songs)c.href=`/track/${q(c.id)}`;return o},be=async e=>{await fetch(`/api/playlists/${e}`,{method:"DELETE"}),await C.fetchPlaylists()},x=async()=>{const s=await(await fetch("/api/playlists/new")).json();return await C.fetchPlaylists(),s},ke=async(e,s="",o="")=>{const c=await x();return await H({id:c,name:e,description:s,cover:o}),c},K=e=>(V("data-v-22ff1c46"),e=e(),N(),e),Q={class:"wrapper"},R={class:"header"},X=K(()=>d("span",{class:"material-icons-round"}," close ",-1)),Y=[X],Z={key:0,class:"confirm"},ee=k({__name:"Template",props:{name:{type:String,required:!0},submitName:{type:String,required:!0},secondaryName:{type:String,required:!1,default:null},secondaryType:{type:String,required:!1,default:null}},emits:["submit","close","secondary"],setup(e,{expose:s,emit:o}){const c=p(!1),l=p(!1),i=()=>l.value=!1,a=()=>{c.value=!1,l.value=!0},t=()=>{c.value=!0,l.value=!0},u=()=>{i(),o("close")},_=()=>{o("submit"),u()},$=()=>{o("secondary"),u()};return s({show:a,hide:i,load:t}),(P,v)=>{const D=B("vue-final-modal");return n(),w(D,{onContextmenu:v[0]||(v[0]=b(()=>{},["stop"])),modelValue:l.value,"onUpdate:modelValue":v[1]||(v[1]=O=>l.value=O),classes:"modal-container","content-class":"modal-content"},{default:j(()=>[d("div",Q,[d("div",R,[d("h3",null,m(e.name),1),d("button",{class:"modal-close",onClick:u},Y)]),c.value?(n(),w(M,{key:0})):(n(),r(h,{key:1},[E(P.$slots,"default",{},void 0,!0),e.submitName||e.secondaryName?(n(),r("div",Z,[e.secondaryName?(n(),r("button",{key:0,class:F(["secondary",e.secondaryType]),onClick:$},m(e.secondaryName),3)):y("",!0),e.submitName?(n(),r("button",{key:1,onClick:_,class:"negative"},m(e.submitName),1)):y("",!0)])):y("",!0)],64))])]),_:3},8,["modelValue"])}}});const ge=g(ee,[["__scopeId","data-v-22ff1c46"]]),ae={class:"dropdown"},te={class:"material-symbols-rounded"},se={key:0,class:"dropdown__options"},le=["onClick"],ne=k({__name:"Dropdown",props:{modelValue:{type:String,required:!0},options:{type:Array,required:!0}},emits:["update:modelValue"],setup(e,{emit:s}){const o=e,c=p(o.modelValue),l=p(!1);I(o,t=>{c.value=t.modelValue},{deep:!0});const i=t=>{c.value=t,s("update:modelValue",t),l.value=!1},a=L(()=>{const t=o.options.find(u=>u.value==c.value);return t?t.label:""});return window.onclick=()=>l.value=!1,(t,u)=>(n(),r("div",ae,[d("div",{class:"dropdown__selected",onClick:u[0]||(u[0]=b(_=>l.value=!l.value,["stop"]))},[d("span",null,m(f(a)),1),d("i",te,m(l.value?"expand_less":"expand_more"),1)]),l.value?(n(),r("div",se,[(n(!0),r(h,null,T(e.options,_=>(n(),r("div",{key:_.value,class:"dropdown__option",onClick:b($=>i(_.value),["stop"])},m(_.label),9,le))),128))])):y("",!0)]))}});const oe=g(ne,[["__scopeId","data-v-2eeb3ec7"]]),ce=e=>(V("data-v-fba45348"),e=e(),N(),e),re={class:"form"},de={class:"content"},ue=["onClick"],ie=ce(()=>d("span",{class:"material-symbols-rounded"},"file_upload",-1)),me=[ie],_e=["accept","onChange"],ye=["onUpdate:modelValue","onChange"],ve=["onClick","src"],fe=["onUpdate:modelValue","type","onChange"],pe=k({__name:"Form",props:{options:{type:Array,required:!0}},setup(e,{expose:s}){const o=e;return s({toObject:()=>{const l={};return o.options.forEach(i=>{l[i.name]=i.value}),l}}),(l,i)=>(n(),r("div",re,[(n(!0),r(h,null,T(e.options,a=>(n(),r("div",{key:a.name,class:"option"},[d("h4",null,m(f(z)(a.name)),1),d("div",de,[a.type=="upload"?(n(),r(h,{key:0},[d("button",{onClick:()=>{var t,u;return(u=(t=l.$refs["upload-"+a.name])==null?void 0:t[0])==null?void 0:u.click()},class:"icon-button"},me,8,ue),d("input",{type:"file",ref_for:!0,ref:"upload-"+a.name,style:{display:"none"},accept:a.accept,onChange:t=>a==null?void 0:a.onUpload(t.target.files[0])},null,40,_e),S(d("input",{type:"text",class:"addSong cover","onUpdate:modelValue":t=>a.value=t,ref_for:!0,ref:"cover",onChange:t=>a==null?void 0:a.onChange(a.value)},null,40,ye),[[J,a.value]]),a.imagePreview?(n(),r("img",{key:0,onClick:t=>f(G)(a.value),class:"imagePreview",src:f(W)(a.value)},null,8,ve)):y("",!0)],64)):a.type=="dropdown"?(n(),w(oe,{key:1,modelValue:a.value,"onUpdate:modelValue":t=>a.value=t,options:a.options},null,8,["modelValue","onUpdate:modelValue","options"])):S((n(),r("input",{key:2,"onUpdate:modelValue":t=>a.value=t,type:a.type,onChange:t=>a.onChange?a==null?void 0:a.onChange(a.value):null},null,40,fe)),[[A,a.value]])])]))),128))]))}});const Ce=g(pe,[["__scopeId","data-v-fba45348"]]),$e=async e=>{console.log("updateSong",e),await fetch(`/api/tracks/${e.id}`,{method:"PUT",body:JSON.stringify({source:e.src,title:e.title,artist:e.artist,album:e.album,cover:e.cover})})},Se=async e=>await(await fetch("/api/browse/track",{method:"POST",body:JSON.stringify({url:e})})).json(),Ve=async(e,s)=>{e==="new"&&(e=await x()),typeof e=="string"&&console.error("playlistId cannot be a string",e),await fetch(`/api/playlists/${e}/tracks`,{method:"POST",body:JSON.stringify({source:s.src,title:s.title,artist:s.artist,album:s.album,cover:s.cover})})};export{Ce as F,ge as T,Ve as a,H as b,ke as c,be as d,x as e,Se as f,we as g,$e as u};
