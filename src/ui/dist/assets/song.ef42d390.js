import{j as U,v as x,m as b,n as w,o as n,f as _,w as D,a as o,t as y,L as E,c as d,r as j,x as F,d as f,F as p,y as M,e as J,k,l as S,_ as C,i as q,u as v,z as g,A as B,B as L,C as I,D as z,p as A}from"./index.08918264.js";import{D as W}from"./Dropdown.27fca163.js";const h=U(),G=async e=>{await fetch(`/api/playlists/${e.id}`,{method:"POST",body:JSON.stringify({name:e.name,description:e.description,cover:e.cover})}),await h.fetchPlaylists()},ye=async e=>{const t=await fetch(`/api/playlists/${e}`);if(t.status===404)return null;const c=await t.json();for(const l of c.songs)l.href=`/track/${x(l.id)}`;return c},fe=async e=>{await fetch(`/api/playlists/${e}`,{method:"DELETE"}),await h.fetchPlaylists()},$=async()=>{const t=await(await fetch("/api/playlists/new")).json();return await h.fetchPlaylists(),t},he=async(e,t="",c="")=>{const l=await $();return await G({id:l,name:e,description:t,cover:c}),l},ve=async(e,t)=>{await fetch(`/api/playlists/${e}/tracks`,{method:"DELETE",body:JSON.stringify({songId:t})}),await h.fetchPlaylists()},H=e=>(k("data-v-22ff1c46"),e=e(),S(),e),K={class:"wrapper"},Q={class:"header"},R=H(()=>o("span",{class:"material-icons-round"}," close ",-1)),X=[R],Y={key:0,class:"confirm"},Z=b({__name:"Template",props:{name:{type:String,required:!0},submitName:{type:String,required:!0},secondaryName:{type:String,required:!1,default:null},secondaryType:{type:String,required:!1,default:null}},emits:["submit","close","secondary"],setup(e,{expose:t,emit:c}){const l=w(!1),r=w(!1),i=()=>r.value=!1,a=()=>{l.value=!1,r.value=!0},s=()=>{l.value=!0,r.value=!0},u=()=>{i(),c("close")},N=()=>{c("submit"),u()},P=()=>{c("secondary"),u()};return t({show:a,hide:i,load:s}),(T,m)=>{const V=J("vue-final-modal");return n(),_(V,{onContextmenu:m[0]||(m[0]=M(()=>{},["stop"])),modelValue:r.value,"onUpdate:modelValue":m[1]||(m[1]=O=>r.value=O),classes:"modal-container","content-class":"modal-content"},{default:D(()=>[o("div",K,[o("div",Q,[o("h3",null,y(e.name),1),o("button",{class:"modal-close",onClick:u},X)]),l.value?(n(),_(E,{key:0})):(n(),d(p,{key:1},[j(T.$slots,"default",{},void 0,!0),e.submitName||e.secondaryName?(n(),d("div",Y,[e.secondaryName?(n(),d("button",{key:0,class:F(["secondary",e.secondaryType]),onClick:P},y(e.secondaryName),3)):f("",!0),e.submitName?(n(),d("button",{key:1,onClick:N,class:"negative"},y(e.submitName),1)):f("",!0)])):f("",!0)],64))])]),_:3},8,["modelValue"])}}});const _e=C(Z,[["__scopeId","data-v-22ff1c46"]]),ee=e=>(k("data-v-af698de3"),e=e(),S(),e),ae={class:"form"},te={class:"content"},se=["onClick"],ne=ee(()=>o("span",{class:"material-symbols-rounded"},"file_upload",-1)),oe=[ne],ce=["accept","onChange"],le=["onUpdate:modelValue","onChange"],re=["onClick","src"],de=["onUpdate:modelValue","type","onChange"],ie=b({__name:"Form",props:{options:{type:Array,required:!0}},setup(e,{expose:t}){const c=e;return t({toObject:()=>{const r={};return c.options.forEach(i=>{r[i.name]=i.value}),r}}),(r,i)=>(n(),d("div",ae,[(n(!0),d(p,null,q(e.options,a=>(n(),d("div",{key:a.name,class:"option"},[o("h4",null,y(v(I)(a.name)),1),o("div",te,[a.type=="upload"?(n(),d(p,{key:0},[o("button",{onClick:()=>{var s,u;return(u=(s=r.$refs["upload-"+a.name])==null?void 0:s[0])==null?void 0:u.click()},class:"icon-button"},oe,8,se),o("input",{type:"file",ref_for:!0,ref:"upload-"+a.name,style:{display:"none"},accept:a.accept,onChange:s=>a==null?void 0:a.onUpload(s.target.files[0])},null,40,ce),g(o("input",{type:"text",class:"addSong cover","onUpdate:modelValue":s=>a.value=s,ref_for:!0,ref:"cover",onChange:s=>a==null?void 0:a.onChange(a.value)},null,40,le),[[B,a.value]]),a.imagePreview?(n(),d("img",{key:0,onClick:s=>v(z)(a.value),class:"imagePreview",src:v(A)(a.value)},null,8,re)):f("",!0)],64)):a.type=="dropdown"?(n(),_(W,{key:1,modelValue:a.value,"onUpdate:modelValue":s=>a.value=s,options:a.options},null,8,["modelValue","onUpdate:modelValue","options"])):g((n(),d("input",{key:2,"onUpdate:modelValue":s=>a.value=s,type:a.type,onChange:s=>a.onChange?a==null?void 0:a.onChange(a.value):null},null,40,de)),[[L,a.value]])])]))),128))]))}});const pe=C(ie,[["__scopeId","data-v-af698de3"]]),we=async e=>{await fetch(`/api/tracks/${e.id}`,{method:"PUT",body:JSON.stringify({source:e.src,title:e.title,artist:e.artist,album:e.album,cover:e.cover})})},ge=async e=>await(await fetch("/api/browse/track",{method:"POST",body:JSON.stringify({url:e})})).json(),be=async(e,t)=>{e==="new"&&(e=await $()),typeof e=="string"&&console.error("playlistId cannot be a string",e),await fetch(`/api/playlists/${e}/tracks`,{method:"POST",body:JSON.stringify({source:t.src||t.source,title:t.title,artist:t.artist,album:t.album,cover:t.cover})})},ke=async(e,t=!0)=>{await fetch(`/api/tracks/${e}`,{method:"PUT",body:JSON.stringify({favourite:t})})},Se=async e=>{window.open(`/api/tracks/${e}/download`)};export{pe as F,_e as T,be as a,ge as b,he as c,Se as d,G as e,ke as f,ye as g,fe as h,$ as i,ve as r,we as u};
